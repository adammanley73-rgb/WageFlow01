-- supabase/migrations/20250930100500_backfill_company_id_step1.sql
-- Idempotent backfill: create a company per company_settings row (if needed),
-- ensure the creator is an owner, then assign all NULL company_id rows
-- in employees and pay_runs to that company.

do $$
declare
  rec record;
  v_company_id uuid;
  v_name text;
begin
  -- Loop over each company_settings row. Assumes company_settings.created_by is the auth user id.
  for rec in
    select cs.created_by, coalesce(cs.company_name, 'My Company') as company_name
    from public.company_settings cs
  loop
    v_name := rec.company_name;

    -- 1) ensure a company exists for this creator
    select c.id
      into v_company_id
    from public.companies c
    join public.company_members m
      on m.company_id = c.id
     and m.profile_id = rec.created_by
     and m.role in ('owner','admin')
    limit 1;

    if v_company_id is null then
      -- create minimal company
      insert into public.companies(name)
      values (v_name)
      returning id into v_company_id;

      -- ensure creator is owner (do not trust the insert trigger in migrations)
      insert into public.company_members(company_id, profile_id, role)
      select v_company_id, rec.created_by, 'owner'
      where not exists (
        select 1 from public.company_members
        where company_id = v_company_id and profile_id = rec.created_by
      );
    end if;

    -- 2) assign all orphan rows to this company
    update public.employees e
       set company_id = v_company_id
     where e.company_id is null;

    update public.pay_runs pr
       set company_id = v_company_id
     where pr.company_id is null;

  end loop;
end
$$;
